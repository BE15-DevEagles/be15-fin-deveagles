#!/usr/bin/env bash

echo "[Hook] Git pre-commit hook started..."
echo "📂 [Info] Project root: $(pwd)"

# 프로젝트 루트 경로 저장
PROJECT_ROOT=$(pwd)

# 스테이징된 모든 파일 가져오기
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACMR)
echo "[Info] Staged files detected:"
echo "$STAGED_FILES"

# 프론트엔드 파일 검사 (확장자 추가: ts, tsx, js, jsx, vue, css, scss)
FE_FILES=$(git diff --cached --name-only --diff-filter=ACMR | grep -E '\.((j|t)s(x)?|vue|css|scss)$' | grep "be15_DevEagles_FE" || true)
echo "[Debug] Frontend files found:"
echo "$FE_FILES"

# 자바 파일 검사
JAVA_FILES=$(git diff --cached --name-only --diff-filter=ACMR | grep -E '\.java$' | grep "be15_DevEagles_BE" || true)
echo "[Debug] Java files found:"
echo "$JAVA_FILES"

# 프론트엔드 파일 변경사항이 있는 경우
if [ -n "$FE_FILES" ]; then
  echo "[INFO] 변경된 프론트엔드 파일 감지됨"
  
  # 프론트엔드 디렉토리로 이동
  echo "[Debug] Moving to frontend directory"
  cd "$PROJECT_ROOT/be15_DevEagles_FE" || { echo "❌ [Error] Failed to change to frontend directory"; exit 1; }
  echo "[Debug] Current directory: $(pwd)"
  
  # package.json이 존재하는지 확인
  if [ ! -f "package.json" ]; then
    echo "❌ [Error] package.json not found in $(pwd)"
    exit 1
  fi
  
  echo "[Action] lint-staged 실행 중..."
  # lint-staged를 통해 프론트엔드 파일 린팅 실행 (빈 커밋 허용)
  npx lint-staged --allow-empty || { echo "❌ [Error] lint-staged failed"; exit 1; }
  
  # 변경된 프론트엔드 파일 다시 스테이징
  echo "[Action] Re-adding modified frontend files to staging..."
  cd "$PROJECT_ROOT" || exit 1
  for file in $FE_FILES; do
    if test -f "$file"; then
      echo "➕ Adding: $file"
      git add "$file"
    fi
  done
  
  echo "✅ [Success] Frontend linting completed."
fi

# 자바 파일 변경사항이 있는 경우에만 spotlessApply 실행
if [ -n "$JAVA_FILES" ]; then
  echo "[INFO] 변경된 자바 파일 감지됨"
  
  # 백엔드 디렉토리로 이동
  echo "[Debug] Moving to backend directory"
  cd "$PROJECT_ROOT/be15_DevEagles_BE" || { echo "❌ [Error] Failed to change to backend directory"; exit 1; }
  echo "[Debug] Current directory: $(pwd)"
  
  # gradlew 실행
  echo "[Action] Running spotlessApply for Java files..."
  if [ -f "gradlew.bat" ] && [ "$(uname)" = "Windows_NT" ]; then
    echo "[Debug] Using gradlew.bat"
    ./gradlew.bat spotlessApply --no-daemon
  elif [ -f "gradlew" ]; then
    echo "[Debug] Using gradlew"
    chmod +x ./gradlew
    ./gradlew spotlessApply --no-daemon
  else
    echo "❌ [Error] Could not find gradlew or gradlew.bat in BE directory"
    exit 1
  fi
  
  SPOTLESS_RESULT=$?
  if [ $SPOTLESS_RESULT -ne 0 ]; then
    echo "❌ [Error] spotlessApply failed! Error code: $SPOTLESS_RESULT"
    exit 1
  fi
  
  # 변경된 자바 파일 다시 스테이징
  echo "[Action] Re-adding modified Java files to staging..."
  cd "$PROJECT_ROOT" || exit 1
  for file in $JAVA_FILES; do
    if test -f "$file"; then
      echo "➕ Adding: $file"
      git add "$file"
    fi
  done
  
  echo "✅ [Success] Java formatting completed."
fi

echo "✅ [Hook] Pre-commit hook finished successfully."
