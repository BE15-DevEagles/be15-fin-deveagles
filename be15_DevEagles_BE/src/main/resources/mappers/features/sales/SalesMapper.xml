<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.deveagles.be15_deveagles_be.features.sales.query.mapper.SalesMapper">

    <!-- 매출만 조회 (payments 제외) -->
    <resultMap id="SalesListWithoutPaymentsMap" type="com.deveagles.be15_deveagles_be.features.sales.query.dto.response.SalesListResponse">
        <id property="salesId" column="sales_id"/>
        <result property="salesDate" column="sales_date"/>
        <result property="salesType" column="sales_type"/>
        <result property="staffId" column="staff_id"/>
        <result property="staffName" column="staff_name"/>
        <result property="customerName" column="customer_name"/>
        <result property="secondaryItemName" column="item_name"/>
        <result property="prepaidPassName" column="prepaid_pass_name"/>
        <result property="sessionPassName" column="session_pass_name"/>
        <result property="retailPrice" column="retail_price"/>
        <result property="discountAmount" column="discount_amount"/>
        <result property="totalAmount" column="total_amount"/>

        <!-- 상세 조회용 식별자 -->
        <result property="itemSalesId" column="item_sales_id"/>
        <result property="prepaidPassSalesId" column="prepaid_pass_sales_id"/>
        <result property="sessionPassSalesId" column="session_pass_sales_id"/>
    </resultMap>

    <select id="findSalesListWithoutPayments" resultMap="SalesListWithoutPaymentsMap">
        SELECT
        s.staff_id,
        s.sales_id,
        s.sales_date,
        CASE
        WHEN s.total_amount &lt; 0 OR s.is_refunded = TRUE THEN 'REFUND'
        WHEN EXISTS (
        SELECT 1 FROM session_pass_sales sp2 WHERE sp2.sales_id = s.sales_id
        UNION
        SELECT 1 FROM prepaid_pass_sales pp2 WHERE pp2.sales_id = s.sales_id
        ) AND NOT EXISTS (SELECT 1 FROM item_sales i3 WHERE i3.sales_id = s.sales_id) THEN 'MEMBERSHIP'
        WHEN EXISTS (SELECT 1 FROM item_sales i2 WHERE i2.sales_id = s.sales_id) THEN 'ITEMS'
        ELSE 'UNKNOWN'
        END AS sales_type,
        st.staff_name,
        c.customer_name,
        IFNULL(si.secondary_item_name, '') AS item_name,
        ppp.prepaid_pass_name AS prepaid_pass_name,
        spp.session_pass_name AS session_pass_name,
        s.retail_price,
        s.discount_amount,
        s.total_amount,
        i.item_sales_id,
        pp.prepaid_pass_sales_id,
        sp.session_pass_sales_id
        FROM sales s
        LEFT JOIN staff st ON s.staff_id = st.staff_id
        LEFT JOIN customer c ON s.customer_id = c.customer_id
        LEFT JOIN item_sales i ON s.sales_id = i.sales_id
        LEFT JOIN secondary_item si ON i.secondary_item_id = si.secondary_item_id
        LEFT JOIN session_pass_sales sp ON s.sales_id = sp.sales_id
        LEFT JOIN session_pass spp ON sp.session_pass_id = spp.session_pass_id
        LEFT JOIN prepaid_pass_sales pp ON s.sales_id = pp.sales_id
        LEFT JOIN prepaid_pass ppp ON pp.prepaid_pass_id = ppp.prepaid_pass_id
        WHERE s.shop_id = #{shopId}
        AND s.deleted_at IS NULL
        <if test="filter.startDate != null">
            AND s.sales_date &gt;= #{filter.startDate}
        </if>
        <if test="filter.endDate != null">
            AND s.sales_date &lt;= #{filter.endDate}
        </if>
        <if test="filter.customerKeyword != null and filter.customerKeyword != ''">
            AND (
            c.customer_name LIKE CONCAT('%', #{filter.customerKeyword}, '%')
            OR c.phone_number LIKE CONCAT('%', #{filter.customerKeyword}, '%')
            )
        </if>
        <if test="filter.saleTypes != null and !filter.saleTypes.isEmpty()">
            AND (
            <foreach item="type" collection="filter.saleTypes" separator=" OR ">
                <choose>
                    <when test="'ITEMS'.equals(type)">
                        EXISTS (SELECT 1 FROM item_sales i2 WHERE i2.sales_id = s.sales_id)
                        AND (s.total_amount >= 0 AND s.is_refunded = FALSE)
                    </when>
                    <when test="'MEMBERSHIP'.equals(type)">
                        (
                        EXISTS (SELECT 1 FROM session_pass_sales sp2 WHERE sp2.sales_id = s.sales_id)
                        OR EXISTS (SELECT 1 FROM prepaid_pass_sales pp2 WHERE pp2.sales_id = s.sales_id)
                        )
                        AND NOT EXISTS (SELECT 1 FROM item_sales i3 WHERE i3.sales_id = s.sales_id)
                        AND (s.total_amount >= 0 AND s.is_refunded = FALSE)
                    </when>
                    <when test="'REFUND'.equals(type)">
                        s.total_amount &lt; 0 OR s.is_refunded = TRUE
                    </when>
                </choose>
            </foreach>
            )
        </if>
        <if test="filter.staffId != null">
            AND s.staff_id = #{filter.staffId}
        </if>
        ORDER BY s.sales_date DESC
        LIMIT #{filter.size}
        OFFSET #{filter.offset}
    </select>

    <!-- 결제 정보 조회 -->
    <select id="findPaymentsBySalesIds" resultType="com.deveagles.be15_deveagles_be.features.sales.query.dto.response.PaymentsDTO">
        SELECT
        p.sales_id AS salesId,
        p.payments_method AS paymentsMethod,
        p.amount
        FROM payments p
        WHERE p.sales_id IN
        <foreach item="id" collection="salesIds" open="(" separator="," close=")">
            #{id}
        </foreach>
        AND p.deleted_at IS NULL
    </select>

    <!-- 전체 건수 조회 -->
    <select id="countSalesList" resultType="long">
        SELECT COUNT(DISTINCT s.sales_id)
        FROM sales s
        WHERE s.shop_id = #{shopId}
        AND s.deleted_at IS NULL
        <if test="filter.startDate != null">
            AND s.sales_date &gt;= #{filter.startDate}
        </if>
        <if test="filter.endDate != null">
            AND s.sales_date &lt;= #{filter.endDate}
        </if>
        <if test="filter.saleTypes != null and !filter.saleTypes.isEmpty()">
            AND (
            <foreach item="type" collection="filter.saleTypes" separator=" OR ">
                <choose>
                    <when test="'ITEMS'.equals(type)">
                        EXISTS (SELECT 1 FROM item_sales i2 WHERE i2.sales_id = s.sales_id)
                    </when>
                    <when test="'MEMBERSHIP'.equals(type)">
                        EXISTS (SELECT 1 FROM session_pass_sales sp2 WHERE sp2.sales_id = s.sales_id)
                        OR EXISTS (SELECT 1 FROM prepaid_pass_sales pp2 WHERE pp2.sales_id = s.sales_id)
                    </when>
                    <when test="'REFUND'.equals(type)">
                        s.total_amount &lt; 0 OR s.is_refunded = TRUE
                    </when>
                </choose>
            </foreach>
            )
        </if>
        <if test="filter.staffId != null">
            AND s.staff_id = #{filter.staffId}
        </if>
    </select>

</mapper>
