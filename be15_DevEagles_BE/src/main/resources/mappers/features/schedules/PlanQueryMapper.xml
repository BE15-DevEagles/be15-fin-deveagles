<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.deveagles.be15_deveagles_be.features.schedules.query.mapper.PlanQueryMapper">

    <!-- 단기 일정 상세 조회 -->
    <select id="findPlanDetailById" resultType="com.deveagles.be15_deveagles_be.features.schedules.query.dto.response.PlanDetailResponse">
        SELECT
            p.plan_id       AS planId,
            s.staff_name    AS staffName,
            s.staff_id      AS staffId,
            p.shop_id       AS shopId,
            p.plan_title    AS title,
            p.plan_memo     AS memo,
            p.plan_start_at AS startAt,
            p.plan_end_at   AS endAt
        FROM plan p
        JOIN staff s ON p.staff_id = s.staff_id
        WHERE p.plan_id = #{planId}
    </select>

    <!-- 단기/정기/전체 일정 목록 조회 -->
    <select id="findPlans" resultType="com.deveagles.be15_deveagles_be.features.schedules.query.dto.response.PlanListResponse">
        <choose>

            <!-- 단기 일정(plan)만 조회 -->
            <when test="planType == 'plan'">
                SELECT
                p.plan_id AS id,
                s.staff_id AS staffId,
                s.staff_name AS staffName,
                p.plan_title AS planTitle,
                'plan' AS planType,
                NULL AS repeatRule,
                p.plan_start_at AS startAt,
                p.plan_end_at AS endAt,
                NULL AS startTime,
                NULL AS endTime
                FROM plan p
                JOIN staff s ON p.staff_id = s.staff_id
                WHERE p.shop_id = #{shopId}
                <if test="staffId != null">
                    AND p.staff_id = #{staffId}
                </if>
                <if test="from != null and to != null">
                    AND (
                    (p.plan_start_at BETWEEN #{from} AND #{to}) OR
                    (p.plan_end_at BETWEEN #{from} AND #{to}) OR
                    (p.plan_start_at &lt;= #{from} AND p.plan_end_at &gt;= #{to})
                    )
                </if>
                ORDER BY startAt ASC
                LIMIT #{limit} OFFSET #{offset}
            </when>

            <!-- 정기 일정(regular)만 조회 -->
            <when test="planType == 'regular_plan'">
                SELECT
                rp.regular_plan_id AS id,
                s.staff_id AS staffId,
                s.staff_name AS staffName,
                rp.regular_plan_title AS planTitle,
                'regular_plan' AS planType,
                CASE
                WHEN rp.weekly_plan IS NOT NULL THEN
                CASE rp.weekly_plan
                WHEN 'MON' THEN '매주 월요일 반복'
                WHEN 'TUE' THEN '매주 화요일 반복'
                WHEN 'WED' THEN '매주 수요일 반복'
                WHEN 'THU' THEN '매주 목요일 반복'
                WHEN 'FRI' THEN '매주 금요일 반복'
                WHEN 'SAT' THEN '매주 토요일 반복'
                WHEN 'SUN' THEN '매주 일요일 반복'
                ELSE NULL
                END
                WHEN rp.monthly_plan IS NOT NULL THEN CONCAT('매월 ', rp.monthly_plan, '일 반복')
                ELSE NULL
                END AS repeatRule,
                NULL AS startAt,
                NULL AS endAt,
                rp.regular_plan_start_at AS startTime,
                rp.regular_plan_end_at AS endTime
                FROM regular_plan rp
                JOIN staff s ON rp.staff_id = s.staff_id
                WHERE rp.shop_id = #{shopId}
                <if test="staffId != null">
                    AND rp.staff_id = #{staffId}
                </if>
                ORDER BY startTime ASC
                LIMIT #{limit} OFFSET #{offset}
            </when>

            <!-- 전체 일정(plan + regular) 조회 -->
            <otherwise>
                SELECT * FROM (
                SELECT
                p.plan_id AS id,
                s.staff_id AS staffId,
                s.staff_name AS staffName,
                p.plan_title AS planTitle,
                'plan' AS planType,
                NULL AS repeatRule,
                p.plan_start_at AS startAt,
                p.plan_end_at AS endAt,
                NULL AS startTime,
                NULL AS endTime
                FROM plan p
                JOIN staff s ON p.staff_id = s.staff_id
                WHERE p.shop_id = #{shopId}
                <if test="staffId != null">
                    AND p.staff_id = #{staffId}
                </if>
                <if test="from != null and to != null">
                    AND (
                    (p.plan_start_at BETWEEN #{from} AND #{to}) OR
                    (p.plan_end_at BETWEEN #{from} AND #{to}) OR
                    (p.plan_start_at &lt;= #{from} AND p.plan_end_at &gt;= #{to})
                    )
                </if>

                UNION ALL

                SELECT
                rp.regular_plan_id AS id,
                s.staff_id AS staffId,
                s.staff_name AS staffName,
                rp.regular_plan_title AS planTitle,
                'regular_plan' AS planType,
                CASE
                WHEN rp.weekly_plan IS NOT NULL THEN CONCAT('매주 ', rp.weekly_plan, '요일 반복')
                WHEN rp.monthly_plan IS NOT NULL THEN CONCAT('매월 ', rp.monthly_plan, '일 반복')
                ELSE NULL
                END AS repeatRule,
                NULL AS startAt,
                NULL AS endAt,
                rp.regular_plan_start_at AS startTime,
                rp.regular_plan_end_at AS endTime
                FROM regular_plan rp
                JOIN staff s ON rp.staff_id = s.staff_id
                WHERE rp.shop_id = #{shopId}
                <if test="staffId != null">
                    AND rp.staff_id = #{staffId}
                </if>
                ) AS combined
                ORDER BY
                CASE WHEN planType = 'plan' THEN 0 ELSE 1 END,
                COALESCE(startAt, startTime) ASC
                LIMIT #{limit} OFFSET #{offset}
            </otherwise>
        </choose>
    </select>


    <!-- 일정 개수 조회 -->
    <select id="countPlans" resultType="int">
        <choose>
            <!-- 단기 일정만 -->
            <when test="planType == 'plan'">
                SELECT COUNT(*)
                FROM plan p
                WHERE p.shop_id = #{shopId}
                <if test="staffId != null">
                    AND p.staff_id = #{staffId}
                </if>
                <if test="from != null and to != null">
                    AND (
                    (p.plan_start_at BETWEEN #{from} AND #{to}) OR
                    (p.plan_end_at BETWEEN #{from} AND #{to}) OR
                    (p.plan_start_at &lt;= #{from} AND p.plan_end_at &gt;= #{to})
                    )
                </if>
            </when>

            <!-- 정기 일정만 -->
            <when test="planType == 'regular_plan'">
                SELECT COUNT(*)
                FROM regular_plan rp
                WHERE rp.shop_id = #{shopId}
                <if test="staffId != null">
                    AND rp.staff_id = #{staffId}
                </if>
            </when>

            <!-- 전체 일정 -->
            <otherwise>
                SELECT (
                SELECT COUNT(*) FROM plan p
                WHERE p.shop_id = #{shopId}
                <if test="staffId != null">
                    AND p.staff_id = #{staffId}
                </if>
                <if test="from != null and to != null">
                    AND (
                    (p.plan_start_at BETWEEN #{from} AND #{to}) OR
                    (p.plan_end_at BETWEEN #{from} AND #{to}) OR
                    (p.plan_start_at &lt;= #{from} AND p.plan_end_at &gt;= #{to})
                    )
                </if>
                ) +
                (
                SELECT COUNT(*) FROM regular_plan rp
                WHERE rp.shop_id = #{shopId}
                <if test="staffId != null">
                    AND rp.staff_id = #{staffId}
                </if>
                )
            </otherwise>
        </choose>
    </select>
</mapper>
