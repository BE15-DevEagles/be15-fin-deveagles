<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.deveagles.be15_deveagles_be.features.schedules.query.mapper.PlanQueryMapper">

    <!-- 단기 일정 상세 조회 -->
    <select id="findPlanDetailById" resultType="com.deveagles.be15_deveagles_be.features.schedules.query.dto.response.PlanDetailResponse">
        SELECT
            plan_id       AS planId,
            staff_id      AS staffId,
            shop_id       AS shopId,
            plan_title    AS title,
            plan_memo     AS memo,
            plan_start_at AS startAt,
            plan_end_at   AS endAt
        FROM plan
        WHERE plan_id = #{planId}
    </select>

    <!-- 단기 + 정기 일정 목록 조회 -->
    <select id="findPlans" resultType="com.deveagles.be15_deveagles_be.features.schedules.query.dto.response.PlanListResponse">
        <choose>
            <!-- 단기 일정 -->
            <when test="planType == 'plan'">
                SELECT
                p.plan_id AS id,
                'plan' AS type,
                p.plan_title AS title,
                p.plan_memo AS memo,
                s.staff_name AS staffName,
                p.plan_start_at AS startAt,
                p.plan_end_at AS endAt
                FROM plan p
                JOIN staff s ON p.staff_id = s.staff_id
                WHERE p.shop_id = #{shopId}
                <if test="staffId != null">
                    AND p.staff_id = #{staffId}
                </if>
                ORDER BY startAt ASC
                LIMIT #{limit} OFFSET #{offset}
            </when>

            <!-- 정기 일정 -->
            <when test="planType == 'regular'">
                SELECT
                rp.regular_plan_id AS id,
                'regular' AS type,
                rp.regular_plan_title AS title,
                rp.regular_plan_memo AS memo,
                s.staff_name AS staffName,
                STR_TO_DATE(CONCAT(CURDATE(), ' ', DATE_FORMAT(rp.regular_plan_start_at, '%H:%i:%s')), '%Y-%m-%d %H:%i:%s') AS startAt,
                STR_TO_DATE(CONCAT(CURDATE(), ' ', DATE_FORMAT(rp.regular_plan_end_at, '%H:%i:%s')), '%Y-%m-%d %H:%i:%s') AS endAt
                FROM regular_plan rp
                JOIN staff s ON rp.staff_id = s.staff_id
                WHERE rp.shop_id = #{shopId}
                <if test="staffId != null">
                    AND rp.staff_id = #{staffId}
                </if>
                ORDER BY startAt ASC
                LIMIT #{limit} OFFSET #{offset}
            </when>

            <!-- 전체 일정 -->
            <otherwise>
                SELECT * FROM (
                SELECT
                p.plan_id AS id,
                'plan' AS type,
                p.plan_title AS title,
                p.plan_memo AS memo,
                s.staff_name AS staffName,
                p.plan_start_at AS startAt,
                p.plan_end_at AS endAt
                FROM plan p
                JOIN staff s ON p.staff_id = s.staff_id
                WHERE p.shop_id = #{shopId}
                <if test="staffId != null">
                    AND p.staff_id = #{staffId}
                </if>

                UNION ALL

                SELECT
                rp.regular_plan_id AS id,
                'regular' AS type,
                rp.regular_plan_title AS title,
                rp.regular_plan_memo AS memo,
                s.staff_name AS staffName,
                STR_TO_DATE(CONCAT(CURDATE(), ' ', DATE_FORMAT(rp.regular_plan_start_at, '%H:%i:%s')), '%Y-%m-%d %H:%i:%s') AS startAt,
                STR_TO_DATE(CONCAT(CURDATE(), ' ', DATE_FORMAT(rp.regular_plan_end_at, '%H:%i:%s')), '%Y-%m-%d %H:%i:%s') AS endAt
                FROM regular_plan rp
                JOIN staff s ON rp.staff_id = s.staff_id
                WHERE rp.shop_id = #{shopId}
                <if test="staffId != null">
                    AND rp.staff_id = #{staffId}
                </if>
                ) AS combined
                ORDER BY startAt ASC
                LIMIT #{limit} OFFSET #{offset}
            </otherwise>
        </choose>
    </select>

    <!-- 일정 개수 조회 -->
    <select id="countPlans" resultType="int">
        <choose>
            <when test="planType == 'plan'">
                SELECT COUNT(*)
                FROM plan
                WHERE shop_id = #{shopId}
                <if test="staffId != null">
                    AND staff_id = #{staffId}
                </if>
            </when>

            <when test="planType == 'regular'">
                SELECT COUNT(*)
                FROM regular_plan
                WHERE shop_id = #{shopId}
                <if test="staffId != null">
                    AND staff_id = #{staffId}
                </if>
            </when>

            <otherwise>
                SELECT (
                SELECT COUNT(*)
                FROM plan
                WHERE shop_id = #{shopId}
                <if test="staffId != null">
                    AND staff_id = #{staffId}
                </if>
                ) + (
                SELECT COUNT(*)
                FROM regular_plan
                WHERE shop_id = #{shopId}
                <if test="staffId != null">
                    AND staff_id = #{staffId}
                </if>
                )
            </otherwise>
        </choose>
    </select>

</mapper>
