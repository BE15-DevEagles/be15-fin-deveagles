<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.deveagles.be15_deveagles_be.features.membership.query.mapper.CustomerMembershipMapper">

    <!-- 만료 예정 고객 목록 조회 -->
    <select id="findExpiringPrepaidPassCustomers"
            resultType="com.deveagles.be15_deveagles_be.features.membership.query.dto.response.CustomerExpiringPrepaidPassResponse">
        SELECT
        c.customer_id,
        c.customer_name,
        c.phone_number,
        SUM(CASE
        WHEN cpp.expiration_date >= CURRENT_DATE
        THEN cpp.remaining_amount
        ELSE 0
        END) AS total_remaining_amount
        FROM customer c
        JOIN customer_prepaid_pass cpp ON c.customer_id = cpp.customer_id
        WHERE c.shop_id = #{shopId}
        AND cpp.expiration_date IS NOT NULL
        AND cpp.deleted_at IS NULL
        <if test="request.startDate != null">
            AND cpp.expiration_date &gt;= #{request.startDate}
        </if>
        <if test="request.endDate != null">
            AND cpp.expiration_date &lt;= #{request.endDate}
        </if>
        GROUP BY c.customer_id, c.customer_name, c.phone_number
        <if test="request.minRemainingAmount != null">
            HAVING SUM(CASE WHEN cpp.expiration_date &gt;= CURRENT_DATE THEN cpp.remaining_amount ELSE 0 END) &gt;= #{request.minRemainingAmount}
        </if>
        <if test="request.maxRemainingAmount != null">
            <choose>
                <when test="request.minRemainingAmount != null">
                    AND SUM(CASE WHEN cpp.expiration_date &gt;= CURRENT_DATE THEN cpp.remaining_amount ELSE 0 END) &lt;= #{request.maxRemainingAmount}
                </when>
                <otherwise>
                    HAVING SUM(CASE WHEN cpp.expiration_date &gt;= CURRENT_DATE THEN cpp.remaining_amount ELSE 0 END) &lt;= #{request.maxRemainingAmount}
                </otherwise>
            </choose>
        </if>
        ORDER BY MIN(cpp.expiration_date) ASC
        LIMIT #{offset}, #{request.size}
    </select>

    <!-- 만료 예정 고객 수 카운트 -->
    <select id="countExpiringPrepaidPassCustomers" resultType="long">
        SELECT COUNT(*) FROM (
        SELECT c.customer_id
        FROM customer c
        JOIN customer_prepaid_pass cpp ON c.customer_id = cpp.customer_id
        WHERE c.shop_id = #{shopId}
        AND cpp.expiration_date IS NOT NULL
        AND cpp.deleted_at IS NULL
        <if test="request.startDate != null">
            AND cpp.expiration_date &gt;= #{request.startDate}
        </if>
        <if test="request.endDate != null">
            AND cpp.expiration_date &lt;= #{request.endDate}
        </if>
        GROUP BY c.customer_id
        <if test="request.minRemainingAmount != null">
            HAVING SUM(CASE WHEN cpp.expiration_date &gt;= CURRENT_DATE THEN cpp.remaining_amount ELSE 0 END) &gt;= #{request.minRemainingAmount}
        </if>
        <if test="request.maxRemainingAmount != null">
            <choose>
                <when test="request.minRemainingAmount != null">
                    AND SUM(CASE WHEN cpp.expiration_date &gt;= CURRENT_DATE THEN cpp.remaining_amount ELSE 0 END) &lt;= #{request.maxRemainingAmount}
                </when>
                <otherwise>
                    HAVING SUM(CASE WHEN cpp.expiration_date &gt;= CURRENT_DATE THEN cpp.remaining_amount ELSE 0 END) &lt;= #{request.maxRemainingAmount}
                </otherwise>
            </choose>
        </if>
        ) AS filtered
    </select>

    <!-- 고객별 만료 예정 선불권 리스트 조회 -->
    <select id="findExpiringPrepaidPassesByCustomerId"
            resultType="com.deveagles.be15_deveagles_be.features.membership.query.dto.response.PrepaidPassInfo">
        SELECT
            pp.prepaid_pass_name AS prepaidPassName,
            cpp.remaining_amount AS remainingAmount,
            cpp.expiration_date AS expirationDate
        FROM customer_prepaid_pass cpp
                 JOIN prepaid_pass pp ON cpp.prepaid_pass_id = pp.prepaid_pass_id
        WHERE cpp.customer_id = #{customerId}
          AND cpp.expiration_date IS NOT NULL
          AND cpp.deleted_at IS NULL
          AND pp.deleted_at IS NULL
        ORDER BY cpp.expiration_date ASC
    </select>

</mapper>
