[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "deveagles-analytics"
version = "0.1.0"
description = "Customer retention analytics service for beauty salon CRM"
readme = "README.md"
requires-python = ">=3.11"
license = { text = "MIT" }
authors = [
    { name = "DevEagles Team", email = "dev@deveagles.com" },
]
keywords = ["analytics", "crm", "customer-retention", "ml"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "pandas>=2.1.3",
    "duckdb>=0.9.2",
    "sqlalchemy>=2.0.23",
    "pymysql>=1.1.0",  # MariaDB compatible MySQL driver
    "scikit-learn>=1.3.2",
    "numpy>=1.25.2",
    "joblib>=1.3.2",
    "python-jose[cryptography]>=3.3.0",
    "APScheduler>=3.10.4",
    "prometheus-fastapi-instrumentator>=6.1.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "python-multipart>=0.0.6",
    "rich>=13.7.0",
    "typer>=0.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "httpx>=0.25.2",
    "black>=23.11.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.7.1",
    "pre-commit>=3.5.0",
]
jupyter = [
    "jupyter>=1.0.0",
    "jupyterlab>=4.0.8",
    "ipykernel>=6.26.0",
    "matplotlib>=3.8.2",
    "seaborn>=0.13.0",
    "plotly>=5.17.0",
]
monitoring = [
    "prometheus-client>=0.19.0",
    "grafana-api>=1.0.3",
]

[project.urls]
Homepage = "https://github.com/deveagles/analytics"
Documentation = "https://deveagles.github.io/analytics"
Repository = "https://github.com/deveagles/analytics.git"
Issues = "https://github.com/deveagles/analytics/issues"

[project.scripts]
analytics-server = "analytics.cli:serve"
analytics-etl = "analytics.cli:etl"
analytics-train = "analytics.cli:train"

[tool.hatch.version]
path = "src/analytics/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/analytics"]

# Testing
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
pythonpath = ["src"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Code formatting
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["analytics"]

# Type checking
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "duckdb.*",
    "sklearn.*",
    "joblib.*",
    "prometheus_fastapi_instrumentator.*",
]
ignore_missing_imports = true

# Coverage
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 